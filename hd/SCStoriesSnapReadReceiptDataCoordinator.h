//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SCStoriesSnapReadReceiptDataCoordinating.h"

@class NSMutableArray, NSString, SCDataCoordinatorListenerAnnouncer, SCDocObjectContext, SCLazy, SCQueuePerformer;

@interface SCStoriesSnapReadReceiptDataCoordinator : NSObject <SCStoriesSnapReadReceiptDataCoordinating>
{
    SCDocObjectContext *_docObjectContext;
    SCLazy *_lazySnapReadReceiptLogger;
    NSString *_currentUserId;
    SCQueuePerformer *_performer;
    SCLazy *_requestRetryer;
    SCLazy *_snapTokenProvider;
    SCLazy *_sessionRequestManager;
    id <SCStoriesCircumstanceEngine> _storiesCircumstanceEngine;
    SCDataCoordinatorListenerAnnouncer *_eventAnnouncer;
    NSMutableArray *_readReceiptUpdateLog;
}

+ (id)dataCoordinatorIdentifier;
@property(readonly, nonatomic) NSMutableArray *readReceiptUpdateLog; // @synthesize readReceiptUpdateLog=_readReceiptUpdateLog;
- (void).cxx_destruct;
- (void)_persistViewReportsToDocObjectContext:(id)arg1;
- (void)_didCompleteFetchViewHistoryResponse:(id)arg1;
- (void)_fetchViewHistoryDidFailWithStatusCode:(long long)arg1 failReason:(long long)arg2;
- (void)_fetchSnapTokenDidSucceedWithAccessToken:(id)arg1;
- (void)_fetchViewHistory;
- (void)logStoriesSnapViewStateNotReadyWhenProvidingMedatadataType:(id)arg1;
- (void)logStoriesSnapConsistencyForSOJUStories:(id)arg1 viewedClientIds:(id)arg2;
- (id)readReceiptViewStatesWithSnapIds:(id)arg1;
- (void)fetchViewHistory;
- (_Bool)hasCompletedInitialFetching;
- (void)handleDataRequest:(id)arg1;
- (void)removeDataUpdateListener:(id)arg1;
- (void)addDataUpdateListener:(id)arg1;
- (id)initWithDocObjectContext:(id)arg1 lazySnapReadReceiptLogger:(id)arg2 currentUserId:(id)arg3 snapTokenProvider:(id)arg4 sessionRequestManager:(id)arg5 storiesCircumstanceEngine:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

