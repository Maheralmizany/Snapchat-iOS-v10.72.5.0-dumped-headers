//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "AIFKVONSObject.h"

#import "SPAnimator.h"

@class F2FTextAnimator, NSDate, NSError, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSProgress, NSString, NSTimer, SPApplicationStateHolder, SPSharedQueuesHolder, SPThreadSafeMutableContainer;

@interface SPTextAnimator : AIFKVONSObject <SPAnimator>
{
    _Bool _isErrorFatal;
    _Bool _isBuffersInitialized;
    _Bool _isPaused;
    _Bool _cancelled;
    unsigned long long _status;
    NSError *_error;
    CDUnknownBlockType _completionBlock;
    NSProgress *_progress;
    id <SPAnimatorDelegate> _delegate;
    SPApplicationStateHolder *_applicationStateHolder;
    id <SPLogger> _logger;
    SPSharedQueuesHolder *_sharedQueuesHolder;
    id <SPStringsProvider> _stringsProvider;
    NSString *_text;
    NSString *_resourcesIdentifier;
    NSString *_resourcesPath;
    unsigned long long _totalFramesCount;
    id <SPCVMatHolderProducer> _producer;
    id <SPFaceAnimatorConsumer> _consumer;
    NSObject<OS_dispatch_queue> *_controlPrepareQueue;
    NSObject<OS_dispatch_queue> *_controlProcessQueue;
    NSObject<OS_dispatch_queue> *_controlReleaseQueue;
    NSObject<OS_dispatch_queue> *_preloadingFrameQueue;
    NSObject<OS_dispatch_queue> *_renderFrameQueue;
    NSObject<OS_dispatch_queue> *_writingFrameQueue;
    NSObject<OS_dispatch_semaphore> *_mainProcessingLoopSemaphore;
    NSObject<OS_dispatch_semaphore> *_restartSemaphore;
    NSObject<OS_dispatch_semaphore> *_renderingFrameSemaphore;
    unsigned long long _maxPreloadCount;
    unsigned long long _renderingThreads;
    unsigned long long _currentWritingFrameIndex;
    unsigned long long _currentReadingFrameIndex;
    double _totalVideoWritingTime;
    NSDate *_startVideoWritingDate;
    F2FTextAnimator *_textAnimator;
    SPThreadSafeMutableContainer *_processedFramesBuffer;
    long long _progressFrameIndex;
    long long _progressTotalFramesCount;
    NSTimer *_resumeTimer;
}

@property(retain, nonatomic) NSTimer *resumeTimer; // @synthesize resumeTimer=_resumeTimer;
@property _Bool cancelled; // @synthesize cancelled=_cancelled;
@property _Bool isPaused; // @synthesize isPaused=_isPaused;
@property _Bool isBuffersInitialized; // @synthesize isBuffersInitialized=_isBuffersInitialized;
@property(nonatomic) long long progressTotalFramesCount; // @synthesize progressTotalFramesCount=_progressTotalFramesCount;
@property(nonatomic) long long progressFrameIndex; // @synthesize progressFrameIndex=_progressFrameIndex;
@property(retain, nonatomic) SPThreadSafeMutableContainer *processedFramesBuffer; // @synthesize processedFramesBuffer=_processedFramesBuffer;
@property(retain, nonatomic) F2FTextAnimator *textAnimator; // @synthesize textAnimator=_textAnimator;
@property(retain, nonatomic) NSDate *startVideoWritingDate; // @synthesize startVideoWritingDate=_startVideoWritingDate;
@property(nonatomic) double totalVideoWritingTime; // @synthesize totalVideoWritingTime=_totalVideoWritingTime;
@property(nonatomic) unsigned long long currentReadingFrameIndex; // @synthesize currentReadingFrameIndex=_currentReadingFrameIndex;
@property(nonatomic) unsigned long long currentWritingFrameIndex; // @synthesize currentWritingFrameIndex=_currentWritingFrameIndex;
@property(nonatomic) unsigned long long renderingThreads; // @synthesize renderingThreads=_renderingThreads;
@property(nonatomic) unsigned long long maxPreloadCount; // @synthesize maxPreloadCount=_maxPreloadCount;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *renderingFrameSemaphore; // @synthesize renderingFrameSemaphore=_renderingFrameSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *restartSemaphore; // @synthesize restartSemaphore=_restartSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *mainProcessingLoopSemaphore; // @synthesize mainProcessingLoopSemaphore=_mainProcessingLoopSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *writingFrameQueue; // @synthesize writingFrameQueue=_writingFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *renderFrameQueue; // @synthesize renderFrameQueue=_renderFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *preloadingFrameQueue; // @synthesize preloadingFrameQueue=_preloadingFrameQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *controlReleaseQueue; // @synthesize controlReleaseQueue=_controlReleaseQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *controlProcessQueue; // @synthesize controlProcessQueue=_controlProcessQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *controlPrepareQueue; // @synthesize controlPrepareQueue=_controlPrepareQueue;
@property(retain, nonatomic) id <SPFaceAnimatorConsumer> consumer; // @synthesize consumer=_consumer;
@property(retain, nonatomic) id <SPCVMatHolderProducer> producer; // @synthesize producer=_producer;
@property(nonatomic) unsigned long long totalFramesCount; // @synthesize totalFramesCount=_totalFramesCount;
@property(copy, nonatomic) NSString *resourcesPath; // @synthesize resourcesPath=_resourcesPath;
@property(copy, nonatomic) NSString *resourcesIdentifier; // @synthesize resourcesIdentifier=_resourcesIdentifier;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) id <SPStringsProvider> stringsProvider; // @synthesize stringsProvider=_stringsProvider;
@property(retain, nonatomic) SPSharedQueuesHolder *sharedQueuesHolder; // @synthesize sharedQueuesHolder=_sharedQueuesHolder;
@property(retain, nonatomic) id <SPLogger> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPApplicationStateHolder *applicationStateHolder; // @synthesize applicationStateHolder=_applicationStateHolder;
@property(nonatomic) __weak id <SPAnimatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) _Bool isErrorFatal; // @synthesize isErrorFatal=_isErrorFatal;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)generateErrorFromException:(const struct exception *)arg1;
- (void)stopResumeTimer;
- (void)startResumeTimer;
- (void)completeWithStatus:(unsigned long long)arg1;
- (void)releaseBuffers;
- (void)initializeBuffers;
- (_Bool)needToBePaused;
- (void)doPrepareWithStartFrame:(unsigned long long)arg1;
- (void)doRelease;
- (void)dispatchReleaseOnQueue:(id)arg1;
- (void)waitBuffersQueues;
- (void)performErrorSafeBlock:(CDUnknownBlockType)arg1 finally:(CDUnknownBlockType)arg2;
- (void)handleWritingFrame:(unsigned long long)arg1;
- (void)handleFrameRendering:(unsigned long long)arg1 cvMatHolder:(id)arg2;
- (void)handleReadingFrame;
- (_Bool)isInValidRunningState;
- (void)startFramesProcessing:(unsigned long long)arg1;
- (void)doProcessWithStartFrame:(unsigned long long)arg1;
- (void)dispatchProcessOnQueue:(id)arg1 startFrame:(unsigned long long)arg2;
- (void)dispatchPrepareOnQueue:(id)arg1 startFrame:(unsigned long long)arg2;
- (void)pause;
- (void)resume;
- (void)startFromFrame:(unsigned long long)arg1;
- (void)cancel;
- (void)start;
- (id)initWithText:(id)arg1 resourcesIdentifier:(id)arg2 resourcesPath:(id)arg3 totalFramesCount:(unsigned long long)arg4 producer:(id)arg5 consumer:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

