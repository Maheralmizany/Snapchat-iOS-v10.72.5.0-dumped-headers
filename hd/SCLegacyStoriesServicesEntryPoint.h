//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SCEntryPoint.h"

@class SCAppUserLifecycleEventHandler, SCAuthenticatedNetworkServices, SCCustomStoriesServices, SCEntryPointCleanup, SCGroupServices, SCLegacyRateLimitServices, SCLegacySnapchatterServices, SCMyCustomStoriesSyncer, SCNetworkImageServices, SCPostableStoriesServices, SCServicesExposer, SCSnapchatterServices, SCStories, SCStoriesMetricServices, SCStoriesNetworkingServices, SCStoriesServices, SCStoriesSnapDeletionStatePrompter, SCStoriesUnarchiver, SCSystemScope, SCUserSessionScope, SCUserStorageServices;

@interface SCLegacyStoriesServicesEntryPoint : SCEntryPoint
{
    SCEntryPointCleanup *_cleanup;
    SCStories *_stories;
    SCStoriesUnarchiver *_storiesUnarchiver;
    SCAppUserLifecycleEventHandler *_appUserLifecycleEventHandler;
    SCStoriesSnapDeletionStatePrompter *_snapDeletionStatePrompt;
    SCMyCustomStoriesSyncer *_myCustomStoriesSyncer;
    SCSystemScope *_systemScope;
    SCAuthenticatedNetworkServices *_authenticatedNetworkServices;
    SCUserSessionScope *_userSessionScope;
    SCUserStorageServices *_userStorageServices;
    SCPostableStoriesServices *_postableStoriesServices;
    SCStoriesServices *_storiesServices;
    SCStoriesMetricServices *_storiesMetricServices;
    SCStoriesNetworkingServices *_storiesNetworkingServices;
    SCSnapchatterServices *_snapchatterServices;
    SCLegacySnapchatterServices *_legacySnapchatterServices;
    SCGroupServices *_groupServices;
    SCNetworkImageServices *_networkImageServices;
    SCCustomStoriesServices *_customStoriesServices;
    SCLegacyRateLimitServices *_legacyRateLimitServices;
    SCServicesExposer *_storiesServicesExposer;
}

@property(retain, nonatomic) SCServicesExposer *storiesServicesExposer; // @synthesize storiesServicesExposer=_storiesServicesExposer;
@property(nonatomic) __weak SCLegacyRateLimitServices *legacyRateLimitServices; // @synthesize legacyRateLimitServices=_legacyRateLimitServices;
@property(nonatomic) __weak SCCustomStoriesServices *customStoriesServices; // @synthesize customStoriesServices=_customStoriesServices;
@property(nonatomic) __weak SCNetworkImageServices *networkImageServices; // @synthesize networkImageServices=_networkImageServices;
@property(nonatomic) __weak SCGroupServices *groupServices; // @synthesize groupServices=_groupServices;
@property(nonatomic) __weak SCLegacySnapchatterServices *legacySnapchatterServices; // @synthesize legacySnapchatterServices=_legacySnapchatterServices;
@property(nonatomic) __weak SCSnapchatterServices *snapchatterServices; // @synthesize snapchatterServices=_snapchatterServices;
@property(nonatomic) __weak SCStoriesNetworkingServices *storiesNetworkingServices; // @synthesize storiesNetworkingServices=_storiesNetworkingServices;
@property(nonatomic) __weak SCStoriesMetricServices *storiesMetricServices; // @synthesize storiesMetricServices=_storiesMetricServices;
@property(nonatomic) __weak SCStoriesServices *storiesServices; // @synthesize storiesServices=_storiesServices;
@property(nonatomic) __weak SCPostableStoriesServices *postableStoriesServices; // @synthesize postableStoriesServices=_postableStoriesServices;
@property(nonatomic) __weak SCUserStorageServices *userStorageServices; // @synthesize userStorageServices=_userStorageServices;
@property(nonatomic) __weak SCUserSessionScope *userSessionScope; // @synthesize userSessionScope=_userSessionScope;
@property(nonatomic) __weak SCAuthenticatedNetworkServices *authenticatedNetworkServices; // @synthesize authenticatedNetworkServices=_authenticatedNetworkServices;
@property(nonatomic) __weak SCSystemScope *systemScope; // @synthesize systemScope=_systemScope;
- (void).cxx_destruct;
- (id)_createStoriesCachedSummaryInfoProvider;
- (id)_createLegacyStoriesPlaybackDataProvider;
- (id)_createUFSResponseProcessorWithStoriesSyncNetworkRequester:(id)arg1;
- (id)_createStoriesSyncNetworkRequesterWithMyStoriesDataCoordinator:(id)arg1 myCustomStoriesSyncer:(id)arg2;
- (id)_createLegacyMyStoriesDataCoordinatorWithStoryLoggingController:(id)arg1;
- (id)_createStoryLoggingController;
- (id)end;
- (void)begin;

@end

