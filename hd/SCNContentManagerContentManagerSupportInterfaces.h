//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SCNContentManagerContentManagerSupportInterfaces.h"

@class NSDictionary, NSSet, NSString, SCFeatureSettingsManager, SCManagedDatastoreCollector, SCNGrapheneClientMetricsProcessor, SCQueuePerformer;

@interface SCNContentManagerContentManagerSupportInterfaces : NSObject <SCNContentManagerContentManagerSupportInterfaces>
{
    long long _cacheSizeLimitInMB;
    NSDictionary *_cacheManagers;
    NSDictionary *_oldCaches;
    id <SCNContentManagerInterimPayloadProcessor> _payloadProcessor;
    id <SCNNetworkManagerNetworkManager> _networkManager;
    SCNGrapheneClientMetricsProcessor *_clientMetricsProcessor;
    id <SCNShimsDataProviderFactory> _dataProviderFactory;
    NSString *_dbLocation;
    NSSet *_streamingEnabledMediaContextTypeSet;
    SCFeatureSettingsManager *_featureSettingsManager;
    SCManagedDatastoreCollector *_managedDatastoreCollector;
    SCQueuePerformer *_queuePerformer;
    id <SCNContentManagerBlizzardLoggerInterface> _blizzardLogger;
    NSString *_userId;
    long long _initialChunkSizeInKBForStreaming;
    long long _cacheChunkSizeInKBForStreaming;
    _Bool _useListOfQueues;
    long long _numberOfQueuesPerMediaContextType;
    _Bool _shouldDelayProgressiveDownload;
    _Bool _shouldLoadCachePolicyFromServer;
    _Bool _shouldSkipThreadHop;
    _Bool _shouldBlockBoltResolveUntilDiskReadComplete;
    long long _cacheScope;
}

- (void).cxx_destruct;
- (_Bool)getShouldAllowReRegister;
- (_Bool)getShouldUseUnzipOnDownloadState;
- (long long)getCacheScope;
- (_Bool)getShouldBlockBoltResolveUntilDiskReadComplete;
- (id)getCacheRootDirectory;
- (_Bool)getShouldAllowContentRetrievalFromCacheWithoutThreadHop;
- (_Bool)getIsMainThread;
- (_Bool)getShouldEnableResumableDownloads;
- (_Bool)getShouldUseNewContentStreamer;
- (_Bool)getShouldLoadCachePolicyFromServer;
- (_Bool)getShouldDelayProgressiveDownload;
- (long long)getNumberOfQueuesPerMediaContextType;
- (_Bool)getShouldUseMultipleQueuesPerMediaContextType;
- (long long)getCacheChunkSizeInKBForStreaming;
- (long long)getInitialChunkSizeInKBForStreaming;
- (id)getUserId;
- (long long)getContentStateDeletionAgeInDays;
- (id)getBlizzardEventLogger;
- (void)platformAssertFail:(id)arg1;
- (_Bool)getIsDataSaverModeEnabled;
- (id)getStreamingEnabledMediaContextTypeSet;
- (id)getDBLocation;
- (id)getDataProviderFactory;
- (id)getClientMetricsProcessor;
- (id)getNetworkManager;
- (id)getPayloadProcessor;
- (void)getUntrackedCaches:(id)arg1;
- (id)getOldCaches;
- (id)getCacheManagers;
- (long long)getCacheSizeLimitInMB;
- (id)initWithCacheSizeLimit:(long long)arg1 withCacheManagers:(id)arg2 withOldCaches:(id)arg3 withPayloadProcessor:(id)arg4 withNetworkManager:(id)arg5 withClientMetricsProcessor:(id)arg6 withDataProviderFactory:(id)arg7 withDbLocation:(id)arg8 withStreamingEnabledMediaContextTypeSet:(id)arg9 withFeatureSettingsManager:(id)arg10 withManagedDatastoreCollector:(id)arg11 withBlizzardLogger:(id)arg12 withUserId:(id)arg13 initialChunkSizeInKBForStreaming:(long long)arg14 cacheChunkSizeInKBForStreaming:(long long)arg15 useListOfQueues:(_Bool)arg16 numberOfQueuesPerMediaContextType:(long long)arg17 shouldDelayProgressiveDownload:(_Bool)arg18 shouldLoadCachePolicyFromServer:(_Bool)arg19 shouldSkipThreadHop:(_Bool)arg20 shouldBlockBoltResolveUntilDiskReadComplete:(_Bool)arg21 cacheScope:(long long)arg22;

@end

