//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SCChecksumUnlockableRequestProviderDelegate.h"
#import "SCLensUnlockableDataStoreProtocol.h"
#import "SCTraceEnabled.h"
#import "SCUnlockFilterControllerDelegate.h"
#import "SCUnlockLensControllerDelegate.h"
#import "SCUnlockableDataFetcherDelegate.h"
#import "SCUserSessionScoped.h"

@class NSMutableDictionary, NSString, SCArchiveUtils, SCDisposableObserverLifecycle, SCExperimentManager, SCGeoFilter, SCSessionRequestManager, SCUnlockFilterController, SCUnlockLensController, SCUnlockableDataFetcher;

@interface SCUnlockableDataStore : NSObject <SCUserSessionScoped, SCTraceEnabled, SCUnlockFilterControllerDelegate, SCUnlockLensControllerDelegate, SCUnlockableDataFetcherDelegate, SCChecksumUnlockableRequestProviderDelegate, SCLensUnlockableDataStoreProtocol>
{
    NSMutableDictionary *_unlockedLensDataStore;
    NSMutableDictionary *_unlockedFilterDataStore;
    SCUnlockLensController *_unlockLensController;
    SCUnlockFilterController *_unlockableFilterController;
    SCUnlockableDataFetcher *_unlockableDataFetcher;
    SCSessionRequestManager *_requestManager;
    id <SCUnlockableLensDataStoreFilterProtocol> _creatorBlacklistFilter;
    id <SCUnlockableLensDataStoreFilterProtocol> _removedLensesFilter;
    id <SCLensUserProvider> _lensUserProvider;
    SCArchiveUtils *_archiveUtils;
    SCDisposableObserverLifecycle *_storeLifecycle;
    SCExperimentManager *_experimentManager;
    long long _featuredLensesToDisplayCount;
    SCGeoFilter *_recentUnlockedFilter;
}

+ (void)removeSavedStateWithArchiveUtils:(id)arg1;
+ (id)storeFromSavedStateWithRequestManager:(id)arg1 lensUserProvider:(id)arg2 archiveUtils:(id)arg3 removedLensesFilter:(id)arg4 creatorBlacklistFilter:(id)arg5 lensMetadataStoreEvents:(id)arg6 experimentManager:(id)arg7;
@property(retain, nonatomic) SCGeoFilter *recentUnlockedFilter; // @synthesize recentUnlockedFilter=_recentUnlockedFilter;
@property(readonly, nonatomic) long long featuredLensesToDisplayCount; // @synthesize featuredLensesToDisplayCount=_featuredLensesToDisplayCount;
- (void).cxx_destruct;
- (id)unlockLensUpdatedNotificationKey;
- (id)unlockLensUpdatedNotificationName;
- (void)_filterOutLenses;
- (id)lensIdToChecksumMapForRequestProvider:(id)arg1;
- (_Bool)lensMetadataFetcherIsActiveLensesUser:(id)arg1;
- (void)unlockableDataFetcher:(id)arg1 didFailWithError:(id)arg2;
- (void)unlockableDataFetcher:(id)arg1 didFetchData:(id)arg2;
- (void)unlockFilterController:(id)arg1 didUpdateUnlockedFilterData:(id)arg2;
- (void)unlockLensController:(id)arg1 didUpdateScanUnlockedLensesData:(id)arg2;
- (void)_setLensObject:(id)arg1 forKey:(id)arg2;
- (void)_setFilterObject:(id)arg1 forKey:(id)arg2;
- (id)filterObjectForKey:(id)arg1;
- (void)clearExpiredLens;
- (void)clearExpiredFilters;
- (id)lensObjectForKey:(id)arg1;
- (void)replacePlaceholderLens:(id)arg1 withUnlockedLens:(id)arg2;
- (void)removeUnlockedLens:(id)arg1;
- (void)addUnlockedLens:(id)arg1;
- (void)invalidateUnlockableIds:(id)arg1;
- (void)updateData;
- (void)updateDataIfNecessary;
- (void)_ensureNonNilObjectsWithState:(id)arg1;
- (id)initWithRequestManager:(id)arg1 lensUserProvider:(id)arg2 archiveUtils:(id)arg3 removedLensesFilter:(id)arg4 creatorBlacklistFilter:(id)arg5 lensMetadataStoreEvents:(id)arg6 experimentManager:(id)arg7;
- (void)clear;
- (void)_subscribeForLensDataStoreEvents:(id)arg1;
- (void)_subscribeForNotifications;
- (void)saveState;
- (void)_restoreSavedState;
- (void)invalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

