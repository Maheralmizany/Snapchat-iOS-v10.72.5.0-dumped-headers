//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SCDelegatedPresentingDelegate.h"
#import "SCEventListener.h"
#import "SCLocationShareWithFriendControllerShareFlowDelegate.h"
#import "SCMapActionSheetPresenterDelegate.h"
#import "SCMapBitmojiLayerControllerDelegate.h"
#import "SCMapCarouselContainerViewDelegate.h"
#import "SCMapCarouselPersonActionDelegate.h"
#import "SCMapCarouselPersonRowControllerDelegate.h"
#import "SCMapChromeDelegate.h"
#import "SCMapDestinationVisitor.h"
#import "SCMapErrorViewManagerDelegate.h"
#import "SCMapExploreViewControllerDelegate.h"
#import "SCMapFriendsListDelegate.h"
#import "SCMapGroupCarouselPageDelegate.h"
#import "SCMapLinkBitmojiCarouselItemViewDelegate.h"
#import "SCMapLoadingStateListener.h"
#import "SCMapLoadingTrackerDelegate.h"
#import "SCMapMarkerCarouselViewControllerDelegate.h"
#import "SCMapMarkerControllerDelegate.h"
#import "SCMapPeopleCarouselViewControllerDelegate.h"
#import "SCMapPersonLocationsListener.h"
#import "SCMapProfilePresenterDelegate.h"
#import "SCMapRequestLocationViewControllerDelegate.h"
#import "SCMapScreenshotOverlayViewsProvider.h"
#import "SCMapSearchPresenterDelegate.h"
#import "SCMapSearchTileSetIdProviding.h"
#import "SCMapStatusCreationPresenterDelegate.h"
#import "SCMapStatusFetcherListener.h"
#import "SCMapStoryPresenterDelegate.h"
#import "SCMapTimeAndWeatherControllerDelegate.h"
#import "SCMapTouchResponderPresentationDelegate.h"
#import "SCMapTrayCollectionViewControllerDelegate.h"
#import "SCMapTrayCollectionViewControllerLoggingDelegate.h"
#import "SCMapTrayExploreSectionProviderDelegate.h"
#import "SCMapTrayFriendFinderSectionProviderDelegate.h"
#import "SCMapTrayInteractionControllerDelegate.h"
#import "SCMapUnlockablePOIControllerDelegate.h"
#import "SCMapViewportListener.h"
#import "SCMapWantsGroupChatDelegate.h"
#import "SCPageNameLogging.h"
#import "SCPassthroughDataSource.h"
#import "SCShakeToReportDelegate.h"
#import "SCTraceEnabled.h"
#import "SIGViewController.h"
#import "UIGestureRecognizerDelegate.h"

@class CLLocation, NSArray, NSString, NSTimer, SCCameraTimerCollapsedView, SCContextV2Manager, SCDelegatedTransitioningDelegate, SCDisposableObserver, SCDoubleTapZoomGestureRecognizer, SCExperimentManager, SCFeatureSettingsManager, SCLazy, SCMTFriendLocation, SCMapAltitudeSliderController, SCMapBasePersonLocationsProvider, SCMapBitmojiAvatarGenerator, SCMapBitmojiLayerController, SCMapCamera, SCMapCarouselContainerView, SCMapChromeFriendFinderFooterButtonsProvider, SCMapCompassButtonController, SCMapErrorViewManager, SCMapExploreButtonController, SCMapGameScoreView, SCMapGameStateDataStore, SCMapGestureLogger, SCMapLoadingTracker, SCMapLocalityNameController, SCMapLoggerSession, SCMapLongPressShareController, SCMapMarkerCarouselViewController, SCMapMarkerController, SCMapOnDemandContentManager, SCMapPeopleCarouselViewController, SCMapPinSpriteManager, SCMapRequestLocationViewController, SCMapServerService, SCMapSnapTokenService, SCMapStatusStore, SCMapTapToPlayLogger, SCMapTimeAndWeatherController, SCMapTrayCollectionViewController, SCMapTrayDataLoadersProvider, SCMapTrayExploreSectionProvider, SCMapTrayFriendFinderSectionProvider, SCMapTrayInteractionController, SCMapTrayLoggingCoordinator, SCMapTrayWorldStoriesSectionProvider, SCMapUnlockablePOIController, SCMapUserPreferences, SCMapViewLogger, SCMapZoomAwarePersonLocationClustersProvider, SCPassthroughView, SCPreviewTooltipBalloon, SCSessionRequestManager, SCXBitmojiLayer, SCXRenderLayer, SCXRenderLock, SIGFooterItem, SIGHeaderItem, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIView, UIView<SCMapChrome>, UIView<SCMapInstance>, UIViewController<SCPageNameLogging>;

@interface SCMapViewController : UIViewController <SCDelegatedPresentingDelegate, SCMapPersonLocationsListener, SCMapPeopleCarouselViewControllerDelegate, SCMapStatusFetcherListener, UIGestureRecognizerDelegate, SCMapSearchPresenterDelegate, SCMapRequestLocationViewControllerDelegate, SCTraceEnabled, SCMapErrorViewManagerDelegate, SCMapTouchResponderPresentationDelegate, SCMapSearchTileSetIdProviding, SCMapStoryPresenterDelegate, SCMapExploreViewControllerDelegate, SCMapCarouselContainerViewDelegate, SCMapGroupCarouselPageDelegate, SCMapMarkerControllerDelegate, SCMapScreenshotOverlayViewsProvider, SCMapTimeAndWeatherControllerDelegate, SCMapCarouselPersonActionDelegate, SCMapStatusCreationPresenterDelegate, SCMapCarouselPersonRowControllerDelegate, SCMapLinkBitmojiCarouselItemViewDelegate, SCMapWantsGroupChatDelegate, SCShakeToReportDelegate, SCMapLoadingTrackerDelegate, SCLocationShareWithFriendControllerShareFlowDelegate, SCMapFriendsListDelegate, SCMapMarkerCarouselViewControllerDelegate, SCMapBitmojiLayerControllerDelegate, SCMapLoadingStateListener, SCMapViewportListener, SCMapActionSheetPresenterDelegate, SCMapProfilePresenterDelegate, SCPassthroughDataSource, SCMapChromeDelegate, SCMapUnlockablePOIControllerDelegate, SCMapTrayCollectionViewControllerDelegate, SCMapTrayCollectionViewControllerLoggingDelegate, SCMapTrayFriendFinderSectionProviderDelegate, SCMapTrayExploreSectionProviderDelegate, SCMapTrayInteractionControllerDelegate, SCEventListener, SCMapDestinationVisitor, SCPageNameLogging, SIGViewController>
{
    id <SCBitmojiSettingsPresenting> _bitmojiSettingsPresenter;
    id <SCCheckInOptionFetcher> _checkInOptionFetcher;
    id <SCContextV2DependencyProvider> _contextDependencyProvider;
    SCContextV2Manager *_contextV2Manager;
    SCExperimentManager *_experimentManager;
    id <SCImageDownloading> _imageDownloader;
    id <SCLensCameraPresenting> _lensCameraPresenter;
    id <SCLocationProvider> _locationProvider;
    SCLazy *_locationShareWithFriendController;
    id <SCLocationSharingService> _locationSharingService;
    id <SCLocationSharingSettingsPresenting> _locationSharingSettingsPresenter;
    SCMapBasePersonLocationsProvider *_mapBasePersonLocationsProvider;
    SCMapBitmojiAvatarGenerator *_mapBitmojiAvatarGenerator;
    id <SCMapChatPresenter> _mapChatPresenter;
    id <SCMapDeepLinkHandling> _mapDeepLinkHandler;
    id <SCMapGamePresenting> _mapGamePresenter;
    SCMapGameStateDataStore *_mapGameStateDataStore;
    id <SCMapInstanceProvider> _mapInstanceProvider;
    SCMapLoggerSession *_mapLoggerSession;
    id <SCMapPeopleFriendsProvider> _mapPeopleFriendsProvider;
    id <SCMapPeopleGroupsProvider> _mapPeopleGroupsProvider;
    id <SCMapActionSheetPresenter> _mapActionSheetPresenter;
    id <SCMapProfilePresenter> _mapProfilePresenter;
    id <SCMapScreenshotPresenter> _mapScreenshotPresenter;
    id <SCMapSearchPresenter> _mapSearchPresenter;
    SCMapServerService *_mapServerService;
    SCMapSnapTokenService *_mapSnapTokenService;
    id <SCShakeToReportPresenting> _mapShakeToReportPresenter;
    id <SCMapStatusCreationPresenting> _mapStatusCreationPresenter;
    SCMapStatusStore *_mapStatusStore;
    id <SCMapStoryPresenting> _mapStoryPresenter;
    id <SCMapTapToPlayResponderProvider> _mapTapToPlayResponderProvider;
    SCMapUserPreferences *_mapUserPreferences;
    id <SCMapViewLoggerTooltipState> _mapViewLoggerTooltipStateProvider;
    id <NavigationDelegate> _navigationDelegate;
    NSString *_currentUserId;
    SCFeatureSettingsManager *_featureSettingsManager;
    id <SCPageViewLogging> _pageViewLogger;
    SCLazy *_sharingPreferencesMutator;
    SCLazy *_sharingPreferencesProvider;
    SCLazy *_snapTokenProvider;
    SCSessionRequestManager *_sessionRequestManager;
    id <SCMapFriendFinderDataProvider> _mapFriendFinderDataProvider;
    id <SCCurrentPageTracker> _currentPageTracker;
    SCPassthroughView *_cameraButton;
    SCCameraTimerCollapsedView *_simpleSnapCameraView;
    SCXBitmojiLayer *_bitmojiLayer;
    SCMapPeopleCarouselViewController *_peopleCarouselViewController;
    SCMapCarouselContainerView *_groupCarouselView;
    SCMapMarkerCarouselViewController *_mapMarkerCarouselViewController;
    SCMapCamera *_cameraToUseAtCarouselClose;
    NSString *_selectedUserIdBeforeEnteringExplore;
    SCMapErrorViewManager *_errorViewManager;
    UIView *_errorViewManagerBaseView;
    SCMapOnDemandContentManager *_onDemandContentManager;
    SCMapGameScoreView *_mapGameScoreView;
    _Bool _isDisplayingGameStartDialog;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UILongPressGestureRecognizer *_touchDownGestureRecognizer;
    SCDoubleTapZoomGestureRecognizer *_doubleTapZoomGestureRecognizer;
    struct CGPoint _startedDepressionPoint;
    double _startingDoubleTapZoom;
    struct CLLocationCoordinate2D _startingDoubleTapZoomCoordinate;
    _Bool _didAttachGestureRecognizers;
    UIPanGestureRecognizer *_slingshotGestureRecognizer;
    UIViewController *_presentedSearchViewController;
    NSString *_searchPoi;
    struct SCMapCoordinateBounds _searchCoordinateBounds;
    _Bool _shouldContinueCenterMapOnUserRegion;
    _Bool _mapIsCurrentlyFullyVisible;
    _Bool _preparedForDismissal;
    _Bool _shouldRefreshPeopleCarouselOnNextLocationSharingPreferencesUpdate;
    CLLocation *_lastUserLocation;
    SCMapCamera *_cameraForDeselection;
    double _lastDidEnterBackgroundTime;
    SCDisposableObserver *_sharingPreferencesUpdateObservable;
    SCXRenderLock *_renderLock;
    UIView *_requestLocationViewSnapshot;
    SCMapRequestLocationViewController *_requestLocationViewController;
    SCDelegatedTransitioningDelegate *_requestLocationTransitioningDelegate;
    SCPreviewTooltipBalloon *_visibleLocationSettingsTooltip;
    NSTimer *_contentLoadCheckTimer;
    int _lastHandledLocationSharingPreferencesUpdateCounter;
    SCMTFriendLocation *_lastSeenFriendLocationForCurrentUser;
    SCMapGestureLogger *_gestureLogger;
    id <SCMapConfiguration> _mapConfiguration;
    id <SCMapCustomGLRenderer> _mapCustomGLRenderer;
    id <SCMapLoadingState> _mapLoadingState;
    id <SCMapViewport> _mapViewport;
    id <SCMapScreenshotProvider> _mapScreenshotProvider;
    SCMapAltitudeSliderController *_altitudeSliderController;
    SCMapCompassButtonController *_compassButtonController;
    SCMapTimeAndWeatherController *_timeAndWeatherController;
    SCMapLocalityNameController *_localityLabelController;
    id <SCMapViewportMetadataProvider> _viewportMetadataProvider;
    double _trayHalfHeight;
    SCMapChromeFriendFinderFooterButtonsProvider *_friendFinderButtonsProvider;
    SCMapCamera *_cameraAtTrayOpen;
    _Bool _shouldRestoreTrayAfterCarouselClose;
    _Bool _shouldDismissMapWhenDismissingExplore;
    _Bool _shouldSuppressNGS;
    _Bool _shouldSuppressBottomChrome;
    _Bool _cameraButtonHidden;
    SIGHeaderItem *_headerItem;
    id <SCMapViewControllerDelegate> _delegate;
    UIViewController<SCPageNameLogging> *_baseOperaPresentingViewController;
    id <SCMapDestination> _destination;
    long long _openType;
    long long _openSource;
    long long _closeType;
    SCMapBitmojiLayerController *_bitmojiLayerController;
    SCMapZoomAwarePersonLocationClustersProvider *_zoomAwareClustersProvider;
    id <SCMapTapToPlayResponder> _ttpPoiController;
    id <SCMapTapToPlayResponder> _ttpDiscoverPoiController;
    SCMapUnlockablePOIController *_unlockablePoiController;
    id <SCMapTapToPlayResponder> _ttpAnywhereController;
    SCMapViewLogger *_logger;
    SCMapLoadingTracker *_loadingTracker;
    SCMapTapToPlayLogger *_tapToPlayLogger;
    SCXRenderLayer *_mapRenderLayer;
    SCMapPinSpriteManager *_pinSpriteManager;
    SCMapMarkerController *_mapMarkerController;
    SCMapLongPressShareController *_longPressShareController;
    SCMapExploreButtonController *_exploreButtonController;
    SCMapTrayDataLoadersProvider *_trayDataLoaders;
    SCMapTrayCollectionViewController *_trayViewController;
    SCMapTrayInteractionController *_trayInteractionController;
    SCMapTrayExploreSectionProvider *_trayExploreSection;
    SCMapTrayLoggingCoordinator *_trayLoggingCoordinator;
    SCMapTrayWorldStoriesSectionProvider *_trayWorldStoriesSection;
    SCMapTrayFriendFinderSectionProvider *_trayFriendFinderSection;
    NSArray *_touchResponders;
    UIView *_originalCameraTimer;
    UIView<SCMapInstance> *_mapView;
    UIView<SCMapChrome> *_mapChrome;
}

@property(readonly, nonatomic) UIView<SCMapChrome> *mapChrome; // @synthesize mapChrome=_mapChrome;
@property(readonly, nonatomic) UIView<SCMapInstance> *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) _Bool cameraButtonHidden; // @synthesize cameraButtonHidden=_cameraButtonHidden;
@property(readonly, nonatomic) UIView *cameraButton; // @synthesize cameraButton=_cameraButton;
@property(nonatomic) __weak UIView *originalCameraTimer; // @synthesize originalCameraTimer=_originalCameraTimer;
@property(copy, nonatomic) NSArray *touchResponders; // @synthesize touchResponders=_touchResponders;
@property(retain, nonatomic) SCMapTrayFriendFinderSectionProvider *trayFriendFinderSection; // @synthesize trayFriendFinderSection=_trayFriendFinderSection;
@property(retain, nonatomic) SCMapTrayWorldStoriesSectionProvider *trayWorldStoriesSection; // @synthesize trayWorldStoriesSection=_trayWorldStoriesSection;
@property(retain, nonatomic) SCMapTrayLoggingCoordinator *trayLoggingCoordinator; // @synthesize trayLoggingCoordinator=_trayLoggingCoordinator;
@property(retain, nonatomic) SCMapTrayExploreSectionProvider *trayExploreSection; // @synthesize trayExploreSection=_trayExploreSection;
@property(retain, nonatomic) SCMapTrayInteractionController *trayInteractionController; // @synthesize trayInteractionController=_trayInteractionController;
@property(retain, nonatomic) SCMapTrayCollectionViewController *trayViewController; // @synthesize trayViewController=_trayViewController;
@property(retain, nonatomic) SCMapTrayDataLoadersProvider *trayDataLoaders; // @synthesize trayDataLoaders=_trayDataLoaders;
@property(retain, nonatomic) SCMapExploreButtonController *exploreButtonController; // @synthesize exploreButtonController=_exploreButtonController;
@property(retain, nonatomic) SCMapLongPressShareController *longPressShareController; // @synthesize longPressShareController=_longPressShareController;
@property(retain, nonatomic) SCMapMarkerController *mapMarkerController; // @synthesize mapMarkerController=_mapMarkerController;
@property(retain, nonatomic) SCMapPinSpriteManager *pinSpriteManager; // @synthesize pinSpriteManager=_pinSpriteManager;
@property(retain, nonatomic) SCXRenderLayer *mapRenderLayer; // @synthesize mapRenderLayer=_mapRenderLayer;
@property(retain, nonatomic) SCMapTapToPlayLogger *tapToPlayLogger; // @synthesize tapToPlayLogger=_tapToPlayLogger;
@property(retain, nonatomic) SCMapLoadingTracker *loadingTracker; // @synthesize loadingTracker=_loadingTracker;
@property(retain, nonatomic) SCMapViewLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SCMapGestureLogger *gestureLogger; // @synthesize gestureLogger=_gestureLogger;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpAnywhereController; // @synthesize ttpAnywhereController=_ttpAnywhereController;
@property(retain, nonatomic) SCMapUnlockablePOIController *unlockablePoiController; // @synthesize unlockablePoiController=_unlockablePoiController;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpDiscoverPoiController; // @synthesize ttpDiscoverPoiController=_ttpDiscoverPoiController;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpPoiController; // @synthesize ttpPoiController=_ttpPoiController;
@property(retain, nonatomic) SCMapZoomAwarePersonLocationClustersProvider *zoomAwareClustersProvider; // @synthesize zoomAwareClustersProvider=_zoomAwareClustersProvider;
@property(retain, nonatomic) SCMapBitmojiLayerController *bitmojiLayerController; // @synthesize bitmojiLayerController=_bitmojiLayerController;
@property(nonatomic) long long closeType; // @synthesize closeType=_closeType;
@property(nonatomic) long long openSource; // @synthesize openSource=_openSource;
@property(nonatomic) long long openType; // @synthesize openType=_openType;
@property(retain, nonatomic) id <SCMapDestination> destination; // @synthesize destination=_destination;
@property(nonatomic) __weak UIViewController<SCPageNameLogging> *baseOperaPresentingViewController; // @synthesize baseOperaPresentingViewController=_baseOperaPresentingViewController;
@property(nonatomic) __weak id <SCMapViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldSuppressBottomChrome; // @synthesize shouldSuppressBottomChrome=_shouldSuppressBottomChrome;
@property(nonatomic) _Bool shouldSuppressNGS; // @synthesize shouldSuppressNGS=_shouldSuppressNGS;
@property(nonatomic) _Bool shouldDismissMapWhenDismissingExplore; // @synthesize shouldDismissMapWhenDismissingExplore=_shouldDismissMapWhenDismissingExplore;
- (void).cxx_destruct;
- (_Bool)_shouldShowNGS;
- (_Bool)_shouldShowMapTray;
- (void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3;
- (void)mapTrayExploreSectionProvider:(id)arg1 wantsChatForPeople:(id)arg2 itemIndex:(unsigned long long)arg3 itemAge:(double)arg4;
- (void)mapTrayExploreSectionProvider:(id)arg1 wantsToShowMiniProfileForPerson:(id)arg2 itemIndex:(unsigned long long)arg3 itemAge:(double)arg4;
- (void)mapTrayExploreSectionProvider:(id)arg1 wantsToPresentStoriesForPerson:(id)arg2 fromSourceView:(id)arg3 itemIndex:(unsigned long long)arg4 itemAge:(double)arg5;
- (void)mapTraySectionProvider:(id)arg1 wantsToPresentStoryWithPoiId:(id)arg2 fromSourceView:(id)arg3 itemIndex:(unsigned long long)arg4 itemAge:(double)arg5;
- (void)mapTrayFriendFinderSectionProviderInitiatedSearch:(id)arg1 itemIndex:(unsigned long long)arg2;
- (void)mapTrayFriendFinderSectionProvider:(id)arg1 wantsToFocusPersonLocation:(id)arg2 itemIndex:(unsigned long long)arg3;
- (struct UIEdgeInsets)mapViewportInsetsForMapTraySectionProvider:(id)arg1;
- (void)mapTrayCollectionViewControllerScrolledToTop:(id)arg1;
- (void)mapTrayCollectionViewController:(id)arg1 tappedRetryOnErrorCellInSection:(unsigned long long)arg2;
- (void)mapTrayCollectionViewController:(id)arg1 focusedSpecialCellOfType:(unsigned long long)arg2 inSection:(unsigned long long)arg3;
- (void)mapTrayCollectionViewController:(id)arg1 focusedRow:(unsigned long long)arg2 inSection:(unsigned long long)arg3;
- (void)mapTrayCollectionViewController:(id)arg1 wantsToRestoreDefaultCameraAnimated:(_Bool)arg2;
- (void)mapTrayCollectionViewController:(id)arg1 shouldResizeToContentHeight:(double)arg2;
- (void)mapTrayCollectionViewControllerExperiencedMapInteraction:(id)arg1;
- (void)mapTrayWillAnimateToPosition:(unsigned long long)arg1 fromInterationMethod:(unsigned long long)arg2;
- (CDUnknownBlockType)animationBlockForMapTrayAnchoringToHeight:(double)arg1;
- (void)mapTrayDidTemporarilyResizeToHeight:(double)arg1;
- (void)_presentLeaderboard;
- (void)_hideMapMarkersCarousel;
- (void)mapMarkerCarouselViewControllerWantsToBeDismissed:(id)arg1;
- (void)mapMarkerControllerHideCardsView:(id)arg1;
- (void)mapMarkerCarouselViewController:(id)arg1 didFinishInitialCardLoadWithResult:(long long)arg2;
- (void)mapMarkerController:(id)arg1 showContextCardsForMarker:(id)arg2;
- (void)mapMarkerControllerDidSelectMarker:(id)arg1;
- (void)mapStatusCreationPresenter:(id)arg1 wantsToPresentStoryForUserId:(id)arg2 fromBaseView:(id)arg3;
- (void)mapStatusCreationPresenter:(id)arg1 wantsToShowProfileForUserId:(id)arg2;
- (void)mapStatusCreationPresenterDidDeleteMostRecentStatus:(id)arg1;
- (void)mapStatusCreationPresenter:(id)arg1 didSetStatusWithSticker:(id)arg2 speechText:(id)arg3 statusId:(id)arg4;
- (void)mapStatusCreationPresenterWantsToDismiss:(id)arg1;
- (id)mapExploreViewControllerExternalHeaderView:(id)arg1;
- (void)mapExploreViewController:(id)arg1 wantsToPlayMapStoryWithPoiId:(id)arg2 fromSourceView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToPresentStoryForPerson:(id)arg2 fromBaseView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToShowMiniProfileForPerson:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToDisplayChatForPeople:(id)arg2 subpageName:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToNavigateToURL:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToShowAllSprites:(_Bool)arg2 animated:(_Bool)arg3;
- (void)mapExploreViewControllerWantsToPresentLocationSettings:(id)arg1;
- (void)mapExploreViewController:(id)arg1 wantsToBeDismissedFromItem:(id)arg2 exitEvent:(long long)arg3;
- (void)mapExploreViewController:(id)arg1 willShowItem:(id)arg2;
- (void)mapStatusFetcherDidLoadMyStatus:(id)arg1;
- (void)mapStatusFetcherDidLoadStatuses:(id)arg1;
- (void)_dismissExploreFromItem:(id)arg1 exitEvent:(long long)arg2 resetMapViewport:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_presentExploreIfNecessaryWithItem:(id)arg1 selectedUserId:(id)arg2;
- (id)_presentedExploreViewController;
- (void)_selectedClusterDidUpdate;
- (void)mapBitmojiLayerController:(id)arg1 didLongPressUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didPanOrZoomToDeselectUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didTapToDeselectUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 wantsToSelectUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didTapPersonLocationClusters:(id)arg2;
- (_Bool)isMapBitmojiLayerControllerAtMaximumZoomLevel:(id)arg1;
- (void)_showCarouselForUserId:(id)arg1;
- (void)_updateCarouselForced:(_Bool)arg1;
- (CDUnknownBlockType)_clusteredPersonLocationComparator;
- (id)_sortedCarouselClustersWithStartCoordinate:(struct CLLocationCoordinate2D)arg1;
- (void)mapProfilePresenter:(id)arg1 wantsMapForUserId:(id)arg2;
- (void)mapProfilePresenter:(id)arg1 wantsChatForUsername:(id)arg2 deeplinkURL:(id)arg3;
- (void)mapActionSheetPresenter:(id)arg1 wantsChatForUsername:(id)arg2 deeplinkURL:(id)arg3;
- (void)_requestLocationViewControllerDidDismiss;
- (void)requestLocationViewControllerDidCancel:(id)arg1;
- (void)requestLocationViewControllerDidGetLocationAccess:(id)arg1;
- (void)personLocationsProviderDidUpdate:(id)arg1;
- (void)dismissingAnimationForTransitionDelegate:(id)arg1;
- (void)presentingAnimationForTransitionDelegate:(id)arg1;
- (_Bool)timeAndWeatherControllerShouldShowParticleEffects:(id)arg1;
- (void)mapLoadingStateDidFinishLoadingStyle:(id)arg1;
- (void)mapLoadingStateDidFinishRenderingFrame:(id)arg1 fullyRendered:(_Bool)arg2;
- (void)mapLoadingState:(id)arg1 didFailLoadingWithError:(id)arg2;
- (void)mapLoadingStateDidFinishLoading:(id)arg1;
- (void)mapLoadingStateDidStartLoading:(id)arg1;
- (void)mapViewportDidChangeTarget:(id)arg1;
- (void)mapViewportDidChangeFollowingUserLocation:(id)arg1 animated:(_Bool)arg2;
- (void)mapViewport:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (id)poiTileSetId;
- (void)mapSearchPresenter:(id)arg1 wantsToGoToCoordinate:(struct CLLocationCoordinate2D)arg2 atZoomLevel:(double)arg3 coordinateBounds:(struct SCMapCoordinateBounds)arg4 useCoordinateBounds:(_Bool)arg5 withTitle:(id)arg6 dropPin:(_Bool)arg7 poiId:(id)arg8;
- (void)mapSearchPresenter:(id)arg1 wantsProfileForPerson:(id)arg2;
- (void)mapSearchPresenter:(id)arg1 wantsChatForUsername:(id)arg2;
- (void)mapSearchPresenter:(id)arg1 wantsLocationForUserId:(id)arg2;
- (void)mapChrome:(id)arg1 wantsToBeginSearchWithSourceView:(id)arg2;
- (void)mapChromeDidTapExploreButton:(id)arg1;
- (void)mapChromeDidTapStatusButton:(id)arg1;
- (void)mapChromeDidTapLocationSettingsButton:(id)arg1;
- (void)mapChromeDidTapBackButton:(id)arg1;
- (void)storyPresenterDidStopPresenting:(id)arg1;
- (void)storyPresenterDidStartPresenting:(id)arg1;
- (void)mapRestoreAfterScreenshotRendered;
- (id)mapScreenshotOverlayViews;
- (id)navigationDelegateForTouchResponder:(id)arg1;
- (void)presentationStateDidChangeForTouchResponder:(id)arg1;
- (_Bool)isInOnboardingForTouchResponder:(id)arg1;
- (id)presentingViewControllerForTouchResponder:(id)arg1;
- (void)unlockablePOIControllerDidSelectLockedPOI:(id)arg1;
- (id)presentingViewControllerForUnlockablePOIController:(id)arg1;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (void)_sendDidZoomMapToResponders;
- (void)_sendDidPanMapToResponders;
- (void)_sendTouchCanceledOnMapToRespondersWithReason:(id)arg1;
- (void)_sendLongPressOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_sendTouchUpOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_sendTouchDownOnMapAtPointToResponders:(struct CGPoint)arg1;
- (_Bool)_sendToTouchRepondersWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)_responderShouldReceiveEvents:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_cancelAllMapViewGestures;
- (void)_onSlingshotGestureAction:(id)arg1;
- (void)_onTouchDownAction:(id)arg1;
- (void)_onZoom:(id)arg1;
- (void)_onPan:(id)arg1;
- (void)_cancelTouchDown:(id)arg1;
- (void)_onLongPress:(id)arg1;
- (void)_onDoubleTapZoomRecognized:(id)arg1;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (id)activeTTPController;
- (void)_showLocationSettingsTooltipWithDuration:(double)arg1 delay:(double)arg2 text:(id)arg3 textColor:(id)arg4 backgroundColor:(id)arg5;
- (id)_sortedPoisUsingS2CellId:(id)arg1;
- (void)_clearSearch;
- (void)_maybeClearSearch;
- (void)_flyToSearchCoordinateBounds:(struct SCMapCoordinateBounds)arg1 pinDescriptor:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_flyToSearchCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 pinDescriptor:(id)arg3 nonCollidingPoiId:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_updateIdleTimerDisabled;
- (void)_centerMapOnUserRegionAnimated:(_Bool)arg1;
- (id)_usersToCenterMapOn;
- (void)_activelyCenterMapOnUserRegionAnimated:(_Bool)arg1;
- (void)_setToolbarVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_handleCarouselClosed;
- (struct CGRect)_desiredCarouselViewFrame;
- (void)_hidePeopleCarouselView;
- (void)_updateFriendFinderButtonsProviderWithUnseenExploreItemCount:(unsigned long long)arg1;
- (void)_updateFriendFinderButtonsProviderWithFriends:(id)arg1;
- (void)_dismissTray:(long long)arg1;
- (void)_presentTrayFromSource:(long long)arg1 storeCamera:(_Bool)arg2;
- (void)_restoreTrayIfNecessary;
- (id)traySectionProviders;
- (void)_clearRenderLock;
- (void)_acquireRenderLockWithType:(long long)arg1;
- (void)_showMiniProfileForPerson:(id)arg1 fromMap:(_Bool)arg2;
- (void)_showMiniProfileForPerson:(id)arg1;
- (void)_showFriendUnifiedActionSheetWithPerson:(id)arg1;
- (void)_flyToCurrentUserLocationIfInViewport;
- (void)_handleCurrentLocationSharingPreferences;
- (void)travelToDefaultViewport:(id)arg1;
- (void)travelToPoi:(id)arg1;
- (void)travelToGroup:(id)arg1;
- (void)travelToFriend:(id)arg1;
- (void)travelToBounds:(id)arg1;
- (void)travelToCoordinate:(id)arg1;
- (void)travelToExploreStatus:(id)arg1;
- (void)_updateErrorViewVisibility;
- (void)errorViewManagerWantsToExitToCamera:(id)arg1;
- (void)errorViewManagerDidStopShowingError:(id)arg1;
- (void)errorViewManagerDidStartShowingError:(id)arg1;
- (void)_hideGroupCarouselViewWithCompletion:(CDUnknownBlockType)arg1;
- (void)mapCarouselContainerWantsDismissal:(id)arg1;
- (void)mapGroupCarouselPage:(id)arg1 wantsChatForGroup:(id)arg2;
- (void)mapGroupCarouselPageWantsToUpdateCurrentStatus:(id)arg1;
- (void)mapGroupCarouselPage:(id)arg1 didTapStoryForGroup:(id)arg2 sourceView:(id)arg3;
- (void)_enterGhostModeAfterDeselectingAll;
- (void)friendsListWantsToSaveChanges:(id)arg1;
- (void)friendsListUserDidTapDoneButton:(id)arg1;
- (void)_presentMapFriendChooserFromShareLocationCarousel;
- (void)locationShareWithFriendController:(id)arg1 wantsToPresentViewController:(id)arg2;
- (void)_processResultFromShareLocation:(unsigned long long)arg1 forPerson:(id)arg2;
- (void)carouselDidTapShareLocationToPerson:(id)arg1;
- (void)carouselDidTapExploreForPerson:(id)arg1;
- (void)carouselDidLongPressProfileForPerson:(id)arg1;
- (void)carouselWantsToShowChatForPerson:(id)arg1;
- (void)carouselDidTapStoryForPerson:(id)arg1 sourceView:(id)arg2;
- (void)_presentBitmojiSettingsViewController;
- (void)wantsGroupChatForPeople:(id)arg1;
- (void)linkBitmojiCarouselItemViewDidTapLinkBitmoji:(id)arg1;
- (id)baseViewControllerForFocusingPersonRowController:(id)arg1;
- (void)personCarouselRowDidFocus:(id)arg1;
- (void)personCarouselRowDidTapDismissShareLocation:(id)arg1;
- (void)personCarouselRowDidTapShareLocation:(id)arg1;
- (void)personCarouselRowDidTapExplore:(id)arg1;
- (void)personCarouselRowDidTapUpdateStatus:(id)arg1;
- (void)personCarouselRowDidLongPressProfile:(id)arg1;
- (void)personCarouselRowDidTapProfile:(id)arg1;
- (void)personCarouselRowWantsToOpenChat:(id)arg1;
- (void)personCarouselRowDidTapStory:(id)arg1 sourceView:(id)arg2;
- (void)mapPeopleCarouselViewControllerWantsToBeDismissed:(id)arg1;
- (void)mapPeopleCarouselViewController:(id)arg1 didShowPerson:(id)arg2 actionType:(long long)arg3;
- (void)_centerCameraOnVisiblePersonsWithEdgeInsets:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2;
- (void)_centerCameraAndSelectUserId:(id)arg1 source:(long long)arg2 actionType:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_flyToUserLocation;
- (void)mapLoadingTrackerDidFinishLoading:(id)arg1;
- (void)_dismissPresentedElements;
- (void)_displayChatForPeople:(id)arg1 source:(long long)arg2 subpageName:(id)arg3;
- (void)_displayChatForUsername:(id)arg1 deepLinkURL:(id)arg2 notification:(id)arg3 source:(long long)arg4 subpageName:(id)arg5;
- (_Bool)_mapViewHasActiveGesture;
- (id)_operaPresentingViewController;
- (id)_visibleViewController;
- (id)_topMostPresentedViewController;
- (void)_didTapOnCompassButton;
- (void)_requestDismissalWithDestination:(long long)arg1;
- (void)_didTouchCameraButton;
- (void)_didTapOnBackButton;
- (void)_didTapOnLocationSettingsButton;
- (void)_presentStatusCreationView;
- (void)presentLocationSettings;
- (void)displayChatForGroupConversation:(id)arg1 fromNotification:(id)arg2 source:(long long)arg3 subpageName:(id)arg4;
- (void)displayChatForGroupConversation:(id)arg1;
- (void)displayChatForUsername:(id)arg1 fromNotification:(id)arg2;
- (_Bool)isPresentingStory;
- (_Bool)isEngagedInBackgroundActivity;
- (void)prepareViewForDismissal;
- (void)prepareViewForPresentation;
- (void)_onLocationSharingPreferencesUpdated:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 forPassthroughView:(id)arg2;
- (void)_gameStateDidChangeNotification:(id)arg1;
- (void)_userDidTakeScreenshot:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)_updateScoreViewVisibility;
- (void)_deregisterForNotificationCenter;
- (void)_registerForNotificationCenter;
- (void)_attachGestureRecognizersIfNecessary;
- (void)_showNotSharingLocationTooltipIfNecessary;
- (void)_updateMapViewFrame;
- (void)_maybeDisplayGameStartDialogIfNeeded;
- (void)_maybeDisplayContentLoadError;
- (void)_maybeFlyToDestination;
- (void)_mapStoppedBeingFullyVisible;
- (void)_mapBecameFullyVisible;
- (void)_checkIfMapIsFullyVisible;
- (_Bool)_isMapFullyVisible;
- (void)_logOnboardingCompleteIfNecessary;
- (void)_dismissOnForegroundIfNecessary;
- (void)_presentRequestLocationVC;
- (void)_presentRequestLocationVCIfNecessary;
- (void)_prepareRequestLocationVC;
- (_Bool)_prepareRequestLocationVCIfNecessary;
- (id)_presentedRequestLocationViewController;
- (_Bool)_isMainNGSMapViewController;
@property(readonly, nonatomic) double usableViewHeight;
@property(readonly, nonatomic) SIGHeaderItem *headerItem; // @synthesize headerItem=_headerItem;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)pageViewName;
- (void)dealloc;
- (id)initWithBitmojiSettingsPresenter:(id)arg1 checkInOptionFetcher:(id)arg2 contextDependencyProvider:(id)arg3 contextV2Manager:(id)arg4 experimentManager:(id)arg5 featureSettingsManager:(id)arg6 imageDownloader:(id)arg7 lensCameraPresenter:(id)arg8 locationProvider:(id)arg9 locationShareWithFriendController:(id)arg10 locationSharingService:(id)arg11 locationSharingSettingsPresenter:(id)arg12 mapActionSheetPresenter:(id)arg13 mapBasePersonLocationsProvider:(id)arg14 mapBitmojiAvatarGenerator:(id)arg15 mapChatPresenter:(id)arg16 mapDeepLinkHandler:(id)arg17 mapFriendFinderDataProvider:(id)arg18 mapGamePresenter:(id)arg19 mapGameStateDataStore:(id)arg20 mapInstanceProvider:(id)arg21 mapLoggerSession:(id)arg22 mapPeopleFriendsProvider:(id)arg23 mapPeopleGroupsProvider:(id)arg24 mapProfilePresenter:(id)arg25 mapScreenshotPresenter:(id)arg26 mapSearchPresenter:(id)arg27 mapServerService:(id)arg28 mapShakeToReportPresenter:(id)arg29 mapSnapTokenService:(id)arg30 mapStatusCreationPresenter:(id)arg31 mapStatusStore:(id)arg32 mapStoryPresenter:(id)arg33 mapTapToPlayResponderProvider:(id)arg34 mapUserPreferences:(id)arg35 mapViewLoggerTooltipStateProvider:(id)arg36 navigationDelegate:(id)arg37 pageViewLogger:(id)arg38 sharingPreferencesMutator:(id)arg39 sharingPreferencesProvider:(id)arg40 currentPageTracker:(id)arg41 snapTokenProvider:(id)arg42 requestManager:(id)arg43 userId:(id)arg44;
- (id)initWithUserSession:(id)arg1 navigationDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) SIGFooterItem *footerItem;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

